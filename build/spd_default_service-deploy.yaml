---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-resource-backend
  namespace: go
spec:
  defaultBackend:
    service:
      name: go-default-service
      port:
        number: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  name: go-default-service
  namespace: go
spec:
  rules:
    - host: go.novastar.tech
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: go-default-service
                port:
                  number: 8080

---
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    app.kubernetes.io/name: go-default-service
    app.kubernetes.io/instance: go-default-service
  name: go-default-service
  namespace: go
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
      appProtocol: http
  selector:
    app.kubernetes.io/name: go-default-service
    app.kubernetes.io/instance: go-default-service

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: go-default-service
    app.kubernetes.io/instance: go-default-service
  name: go-default-service
  namespace: go
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: go-default-service
      app.kubernetes.io/instance: go-default-service
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: go-default-service
        app.kubernetes.io/instance: go-default-service
    spec:
      containers:
        - name: go-default-service
          image: harbor.go.novastar.tech/devops/go-default-service:v0.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /check
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /check
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
          volumeMounts:
            - name: config-yaml
              mountPath: /opt/configs/config.yaml
              subPath: config.yaml
      imagePullSecrets:
        - name: gov2.0harbor
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: config-yaml
          configMap:
            name: go-default-service-configmap

---
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSIxNzIuMTYuODIuMjI5IjogewoJCQkiYXV0aCI6ICJZV1J0YVc0NlNHRnlZbTl5TVRJek5EVT0iCgkJfSwKCQkiaGFyYm9yLnNwZC5ub3Zhc3Rhci50ZWNoIjogewoJCQkiYXV0aCI6ICJjM0JrT2s1dmRtRnpkR0Z5WHpJd01qQT0iCgkJfQoJfSwKCSJIdHRwSGVhZGVycyI6IHsKCQkiVXNlci1BZ2VudCI6ICJEb2NrZXItQ2xpZW50LzE4LjAzLjAtY2UgKGxpbnV4KSIKCX0KfQ==
kind: Secret
metadata:
  name: gov2.0harbor
  namespace: go
type: kubernetes.io/dockerconfigjson
